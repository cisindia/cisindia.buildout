[buildout]
extends = http://dist.plone.org/release/4.1.4/versions.cfg
          http://good-py.appspot.com/release/collective.megaphone/2.1?plone=4.1.4
          http://good-py.appspot.com/release/plone.app.theming/1.0b8
          versions.cfg

versions = versions

effective-user = 

extensions = mr.developer buildout.dumppickedversions

# ZEO Server
zeo-address = 127.0.0.1:8200
# Zope client 1
client1-address = 8090
# Zope client 2
client2-address = 8091

eggs =
    cisindia.site
    Pillow
    ipdb
    fullmarks.mathjax
    fullmarks.tinymceplugins.asciimath

# some contents still rely on these
    p4a.ploneaudio
    p4a.plonevideo
    p4a.plonevideoembed
    Products.NuPlone
    Products.PloneHotfix20110928


zcml = cisindia.site
    
develop = . 
          dev/cisindia.theme

debug-mode = off
deprecation-warnings = on
verbose-security = off


############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
# 
backups-dir=${buildout:directory}/var

newest = true
parts =
    mockedeggs
    zeoserver
    client1
    client2
    zopepy
    zopeskel
    precompile
    unifiedinstaller
    backup


# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads


# unzip all eggs for easier debugging
unzip = true

auto-checkout=*
sources-dir = dev

[sources]
#eea.facetednavigation=svn https://svn.plone.org/svn/collective/eea.facetednavigation/trunk/
#eea.faceted.vocabularies=svn https://svn.plone.org/svn/collective/eea.faceted.vocabularies/trunk/
cisindia.multiviews =svn https://dev.inigo-tech.com/svn/cis-india/cisindia.multiviews/trunk
cisindia.theme = svn https://dev.inigo-tech.com/svn/cis-india/cisindia.theme/trunk
collective.megaphonegrouplookup=svn https://svn.plone.org/svn/collective/collective.megaphonegrouplookup/trunk
collective.openidselector=git git@github.com:inigoconsulting/collective.openidselector.git
cisindia.content = svn https://dev.inigo-tech.com/svn/cis-india/cisindia.content/trunk
# Use this section to install and configure a Zope
# Enterprise Objects server.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2zeoserver
[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${buildout:zeo-address}
effective-user = ${client1:effective-user} 

# Use this section to install and configure a Zope
# client instance.
# For options see http://pypi.python.org/pypi/plone.recipe.zope2instance
[client1]
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
# The line below sets only the initial password. It will not change an
# existing password.
user = admin:cNCLknIb
http-address = ${buildout:client1-address}
effective-user = ${buildout:effective-user}
zserver-threads = 8
zodb-cache-size = 5000
# change debug-mode to "on" to run in development mode
debug-mode = ${buildout:debug-mode}
# change verbose-security to "on" for detailed security
# errors while developing
verbose-security = ${buildout:verbose-security}
deprecation-warnings = ${buildout:deprecation-warnings}

mailinglogger = 
  <mailing-logger>
  level error
  flood-level 10
  smtp-server localhost
  from plone@cis-india.org
  to errors@inigo-tech.com
  subject [CISIndia] %(line)s
  </mailing-logger>



# If you want Zope to know about any additional eggs, list them here.
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    cisindia.theme


# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = 
    ${buildout:zcml}

    
products =
    ${buildout:directory}/products


# You may also control the environment variables for the instance.
environment-vars =
    PYTHON_EGG_CACHE ${buildout:directory}/var/.python-eggs
    TMPDIR ${buildout:directory}/var/tmp 
    zope_i18n_compile_mo_files true


# client2 picks up nearly all its configuration
# from client1. If you need to create a new client
# stanza, you should be able to copy this (with a new part name),
# changing only the parts with "client2" in them.
# For options see http://pypi.python.org/pypi/collective.recipe.zope2cluster
[client2]
<= client1
http-address = ${buildout:client2-address}

# installs a zopepy python interpreter that runs with your
# full Zope environment
[zopepy]
recipe = zc.recipe.egg
eggs = ${client1:eggs}
interpreter = zopepy
scripts = zopepy


# installs paster and Zopeskel
[zopeskel]
recipe = zc.recipe.egg
eggs =
    PasteScript
    ZopeSkel


# compiles .py files in ./parts and ./products so that they don't
# need to be compiled by the daemon
# For options see http://pypi.python.org/pypi/plone.recipe.precompiler
[precompile]
recipe = plone.recipe.precompiler

[mockedeggs]
recipe=collective.recipe.mockedeggs
mocked-eggs =
    PIL = 1.1.6


# This recipe installs the plonectl script and a few other convenience
# items.
# For options see http://pypi.python.org/pypi/plone.recipe.unifiedinstaller
[unifiedinstaller]
recipe = plone.recipe.unifiedinstaller
user = ${client1:user}
primary-port = ${client1:http-address}
sudo-command =sudo


# This recipe builds the backup, restore and snapshotbackup commands.
# For options see http://pypi.python.org/pypi/collective.recipe.backup
[backup]
recipe = collective.recipe.backup
location = ${buildout:backups-dir}/backups
snapshotlocation = ${buildout:backups-dir}/snapshotbackups

[varnish-build]
recipe = zc.recipe.cmmi
url = ${varnish:download-url}

[varnish]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
bind = 127.0.0.1:6081
backends = 127.0.0.1:8028
cache-size = 256M
